// CONTAINER WIDTH
@mixin container($maxWidth: $container-max-width) {
    max-width: $maxWidth;
    margin: 0 auto;
    padding: 0 20px;
}

@mixin containerFull() {
    width: 100%;
}

// BROWSERS
@mixin setBrowsers($attr, $value, $browsers: $browsers-default) {
    #{$attr}: #{$value};

    @each $browser in $browsers {
        -#{$browser}-#{$attr}: #{$value};
    }
}

// BORDER RADIUS
@mixin borderRadius($radius: $radius-default) {
    @include setBrowsers(border-radius, $radius);
}

// FLEXBOX
@mixin flex($justifyContent: center, $alignitems: center, $flexWrap: wrap) {
    display: flex;
    justify-content: $justifyContent;
    align-items: $alignitems;
    flex-wrap: $flexWrap;
}

@mixin flexBasis($basis, $gap: 0) {
    @if $gap !=0 {
        flex-basis: calc($basis - $gap);
    }

    @else {
        flex-basis: $basis;
    }
}

// POSITION
// Relative
@mixin relative() {
    position: relative;
}

// Absolute
@mixin absolute($top: 0, $left: 0) {
    position: absolute;
    top: $top;
    left: $left;
}

// Fixed
@mixin fixed($top: 0, $left: 0) {
    position: fixed;
    top: $top;
    left: $left;
}

// TRANSITION
@mixin transition($property: all, $duration: 0.3s, $timingFunction: ease, $delay: 0s) {
    transition: $property $duration $timingFunction $delay;
}

// BOX SHADOW
@mixin boxShadow($xOffset: 0, $yOffset: 0, $blur: 0, $spread: 0, $color: $color-shadow) {
    box-shadow: $xOffset $yOffset $blur $spread $color;
}

// BUTTONS
@mixin outline() {
    background-color: transparent;
    color: $color-almost-black;
    border-color: $color-almost-black;
}

@mixin fill() {
    background-color: $color-almost-black;
    color: $color-almost-white;
    border: 1px solid transparent;
}

@mixin btn() {
    display: inline-block;
    padding: 12px 24px;
    font-weight: 700;

    @include fill;
    @include borderRadius($radius-big);
    @include transition;

    &:hover {
        @include outline;
    }
}

@mixin btnOutline() {
    @include btn;
    @include outline;

    &:hover {
        @include fill;
    }
}

// RESPONSIVE DESIGN
@mixin setResponsiveDesign($screenWidth) {
    @media screen and (max-width: $screenWidth) {
        @content;
    }
}